#!/usr/bin/env bash
#
# Executes setup.rb using the Ruby bundled with Vagrant.
#

# These paths assume Vagrant was installed from the vendor-supplied packages
# if [ "$(uname)" == "Darwin" ]; then
#     ruby=/Applications/Vagrant/embedded/bin/ruby
# else
#     ruby=/opt/vagrant/embedded/bin/ruby
# fi


#Setup some dependency
#rm -rf opsfiles
if [ ! -d "opsfiles" ]; then
    git clone --depth=1 git@github.com:phanbook/opsfiles.git
fi

if [ "up" == "$1" ]; then
    if ! which vagrant > /dev/null; then
        echo "Vagrant doesn't seem to be installed. Please download and install it"
        echo "from http://www.vagrantup.com/downloads.html and re-run setup.sh."
        exit 1
    fi
    (cd opsfiles && vagrant up)
fi
if [ "provision" == "$1" ]; then
    cd opsfiles && vagrant provision
fi
if [ "ssh" == "$1" ]; then
    cd opsfiles && vagrant ssh ubuntu
fi
if [ "halt" == "$1" ]; then
    cd opsfiles && vagrant halt
fi
if [ "destroy" == "$1" ]; then
    cd opsfiles && vagrant destroy
fi


#Docker setup
if [ "docker" == "$1" ]; then
    if ! which docker > /dev/null; then
        echo "Docker doesn't seem to be installed. Please download and install it"
        echo "from http://www.docker.io/downloads.html and re-run phanbook."
        exit 3
    fi
    if [[ "destroy" == "$2" ]]; then
        # Stop and remove any existing containers
        docker rm -f $(docker ps -a -q)
        # Delete all images
        docker rmi -f $(docker images -q)
    fi
    if ! which docker-compose > /dev/null; then
        curl -L https://github.com/docker/compose/releases/download/1.3.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        sudo service docker start
    fi

    cp opsfiles/docker/docker-compose.yml .
    docker-compose up -d
fi


